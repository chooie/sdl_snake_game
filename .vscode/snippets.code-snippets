{
	// Place your handmade workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"// TODO(choo):": {
		"prefix": "//tc",
		"body": [
			"// TODO(choo): $1",
		],
		"description": "Write a todo"
	},
	"// NOTE(choo):": {
		"prefix": "//nc",
		"body": [
			"// NOTE(choo): $1",
		],
		"description": "Write a note"
	},
	"Multiline comment": {
		"prefix": "/",
		"body": [
			"/*",
			"$1",
			"*/",
		],
		"description": "Multiline comment"
	},
	"Header Guard": {
		"prefix": "headerguard",
		"body": [
			"#if !defined(${TM_FILENAME/(.*)\\..+/${1:/upcase}_H_/})",
			"",
			"$0",
			"",
			"#define ${TM_FILENAME/(.*)\\..+/${1:/upcase}_H_/}",
			"#endif // ${TM_FILENAME/(.*)\\..+/${1:/upcase}_H_/}"
		],
		"description": "Generate a C header guard"
	}
}